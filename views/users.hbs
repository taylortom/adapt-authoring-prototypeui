<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Adapt authoring tool</title>
    <link rel="stylesheet" href="/css/main.css">
    <link rel="stylesheet" href="/css/prototype.css">
  </head>
  <body>
    <div id="app">
      <div id="popup" class="hidden">
        <input type="text" name="" value="">
      </div>
      <a class="back" href="/prototype"><i class="fas fa-home"></i></a>
      <div class="inner">
        <h1>Users</h1>
        <h2>Registered users</h2>
        {{#if error}}
          <p>Something went wrong loading the user list. See the error message below for more details.</p>
          <div class="service-message">{{error}}</div>
        {{else}}
          {{#if users.length}}
            <div class="users">
              {{#each users}}
              <div class="user" data-id="{{_id}}">
                <div class="attribute email" style="width:45%;">{{email}}</div>
                <div class="attribute firstName" style="width:25%;">{{firstName}}</div>
                <div class="attribute lastName" style="width:25%;">{{lastName}}</div>
                <div class="attribute button" style="width:5%;">X</div>
              </div>
              {{/each}}
            </div>
          {{else}}
            <div class="service-message">No users exist in the system.</div>
          {{/if}}

          <div class="button-container">
            <a href="#" class="create">Create new user</a>
          </div>

          <div class="user new">
            <div class="attribute hidden" style="width:5%;text-align:center;"></div>
            <div class="attribute" style="width:40%;"><input type="text" name="email" placeholder="Email address"></div>
            <div class="attribute" style="width:25%;"><input type="text" name="fname" placeholder="First name"></div>
            <div class="attribute" style="width:25%;"><input type="text" name="sname" placeholder="Last name"></div>
            <div class="attribute button" style="width:5%;"><i class="fas fa-save"></i></div>
          </div>
        {{/if}}

        <p>The users module exposes the following endpoints:</p>
        <div class="endpoint">
          <span class="method">POST</span> <span class="route">api/users/</span>
          <p>Creates a new user. Expects an object with user data. See <a href="https://github.com/taylortom/adapt-authoring-users/blob/master/schema/user.schema.js" target="_blank">the schema</a> for more info.</p>
        </div>
        <div class="endpoint">
          <span class="method">GET</span> <span class="route">api/users/:id?</span>
          <p>If an ID is specified, returns a single user. If none is supplied, all users are fetched according to the query params.</p>
        </div>
        <div class="endpoint">
          <span class="method">PUT</span> <span class="route">api/users/:id?</span>
          <p>If an ID is specified, updates a single user. If none is supplied, all users are updated according to the query params.</p>
        </div>
        <div class="endpoint">
          <span class="method">DELETE</span> <span class="route">api/users/:id</span>
          <p>Deletes a single user.</p>
        </div>
      </div>
    </div>
  </body>
  <style media="screen">
    #app {
      width: 80%;
    }
    #app .inner {
      text-align: left;
    }
    #popup {
      position: absolute;
      color: black;
    }
    #popup.hidden {
      display: none;
    }
    #popup input {
      width: 100%;
      border: none;
      background: #00dd95;
      color: white;
      outline: none;
      padding: 5px;
      font-size: 20px;
      font-weight: inherit;
      font-family: inherit;
    }
    .service-message {
      padding: 25px;
      background: rgba(255,255,255,0.25);
      border: 1px solid rgba(255,255,255,0.25);
      border-radius: 3px;
      margin-bottom: 25px;
    }
    h1 {
      text-align: center;
    }
    span.code {
      font-family: monospace;
    }
    .users {
      margin-bottom: 25px;
    }
    .user {
      display: flex;
      flex-wrap: wrap;
    }
    .attribute {
      box-sizing: border-box;
      flex-grow: 1;
      padding: 5px;
      overflow: hidden;
      list-style: none;
      border: 0.5px solid rgba(255,255,255,0.25);
      background: rgba(255,255,255,0.25);
      text-align: left;
    }
    .attribute:hover {
      background: rgba(255,255,255,0.35);
      cursor: text;
    }
    .attribute.button {
      background: none;
      border: none;
      text-align: center;
      cursor: pointer;
      margin-top: 1px;
    }
    .attribute.button:hover {
      color: #ff5567;
    }
    .attribute.hidden {
      background: none;
      border: none;
    }
    .button-container {
      text-align: center;
    }
    a.create {
      display: inline-block;
      padding: 5px 10px;
    }
    .user.new {
      display: none;
    }
    .user.new .attribute {
      padding: 0;
      background: none;
      border-color: rgba(255,255,255,0.5);
    }
    .user.new .attribute input {
      padding: 5px;
      width: 100%;
      background: none;
      border: none;
      outline: none;
      font-size: inherit;
      font-family: inherit;
      font-weight: inherit;
      color: white;
    }
    .user.new .attribute input::-webkit-input-placeholder { color: rgba(255,255,255,0.6); }
    .user.new .attribute input::placeholder { color: rgba(255,255,255,0.6); }

    .user.new .attribute.button {
      margin-top: 6px;
    }
    .user.new .attribute.button:hover {
      color: #00dd95;
    }
    .endpoint {
      margin-bottom: 10px;
      font-size: 85%;
      background: rgba(255,255,255,0.1);
      border: 1px solid rgba(255,255,255,0.25);
      padding: 10px;
    }
    .endpoint .method {
      display: inline-block;
      font-family: monospace;
      background: #00dd95;
      border-radius: 3px;
      padding: 1px 5px;
      margin-right: 5px;
    }
    .endpoint .route {
      font-family: monospace;
      font-weight: 200;
    }
    .endpoint p {
      margin: 0;
      margin-top: 7px;
    }
    .endpoint a {
      background: none;
      display: inline;
      margin: 0;
      padding: 0;
      font-weight: bold;
      border: none;
    }
  </style>
  <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.1/css/all.css" integrity="sha384-50oBUHEmvpQ+1lW4y57PTFmhCaXp0ML5d60M1M7uH2+nqUivzIebhndOJK28anvf" crossorigin="anonymous">
  <script type="text/javascript" src="https://code.jquery.com/jquery-3.4.0.min.js"></script>
  <script type="text/javascript">
    $('.user .button').click(function(e) {
      e.preventDefault();
      var $btn = $(e.currentTarget);
      if($btn.closest('.user').hasClass('new')) {
        return;
      }
      $.ajax('/api/users/' + $btn.closest('.user').attr('data-id'), { method: 'DELETE' })
        .done(refresh)
        .fail(alertError);
    });
    $('.user .attribute').click(function(e) {
      var $cell = $(e.currentTarget);
      var $user = $cell.closest('.user');

      if($user.hasClass('new')) return;

      var $popup = $('#popup');
      var initialVal = $cell.text();

      $popup.removeClass('hidden').css({
        top: $cell.offset().top,
        left: $cell.offset().left,
        width: $cell.width() + 'px'
      });
      $('input', $popup).val(initialVal).focus().on('blur', function() {
        $(this).off('blur');
        $popup.addClass('hidden');
        if($(this).val() === initialVal) {
          return;
        }
        var val = $(this).val();
        var data = ['email','firstName','lastName'].reduce(function(d,a) {
          d[a] = $cell.hasClass(a) ? val : $('.attribute.' + a, $user).text();
          return d;
        }, {});
        $.ajax('/api/users/' + $user.attr('data-id'), { method: 'PUT', data: data })
          .done(refresh).fail(alertError);;
      });
    });
    $('a.create').click(function(e) {
      e.preventDefault();
      $('.user.new').css('display','flex');
      $('a.create').css('display','none');
      $('.user.new input[name="email"]').focus();
    });
    $('.user.new .button').click(function(e) {
      e.preventDefault();
      $.post('/api/users', {
        email: $('.user.new input[name="email"]').val(),
        firstName: $('.user.new input[name="fname"]').val(),
        lastName: $('.user.new input[name="sname"]').val()
      }).done(refresh).fail(alertError);
    });

    function refresh() {
      window.location = window.location;
    }

    function alertError(data) {
      var code = data.responseJSON.statusCode;
      var error = data.responseJSON.error;
      alert(code + " error\n" + error);
    }
  </script>
</html>
